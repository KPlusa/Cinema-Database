SET ECHO ON
SET SERVEROUTPUT ON

CREATE OR REPLACE PROCEDURE PODWYZKA_PRACOWNIKA(KWOTA_PODWYZKI NUMBER,ZAWODP VARCHAR2) IS
CURSOR KURSOR1 IS SELECT * FROM PRACOWNICY
WHERE ZAWOD=ZAWODP FOR UPDATE;
TEMP1 PRACOWNICY%ROWTYPE;
  BEGIN
    OPEN KURSOR1;
    LOOP
      FETCH KURSOR1 INTO TEMP1;
      EXIT WHEN KURSOR1%NOTFOUND;
      UPDATE PRACOWNICY SET PRACOWNICY.WYNAGRODZENIE = PRACOWNICY.WYNAGRODZENIE + KWOTA_PODWYZKI
      WHERE CURRENT OF KURSOR1;
    END LOOP;
END;
/


CREATE OR REPLACE PROCEDURE ZMIANA_CEN_PRODUKTOW(NR_OPCJI NUMBER ,ID_PRODUKTU NUMBER,KWOTA FLOAT) AS

CURSOR KURSOR1 IS SELECT * FROM PRODUKTY
WHERE ID_PRODUKT=ID_PRODUKTU FOR UPDATE;
TEMP1 PRODUKTY%ROWTYPE;
TEMP2 PRODUKTY%ROWTYPE;

  BEGIN
    OPEN KURSOR1;
    IF NR_OPCJI=1 THEN
      LOOP
        FETCH KURSOR1 INTO TEMP1;
        EXIT WHEN KURSOR1%NOTFOUND;
        UPDATE PRODUKTY SET PRODUKTY.CENA = PRODUKTY.CENA + KWOTA
        WHERE CURRENT OF KURSOR1;
      END LOOP;
    END IF;
    IF NR_OPCJI=2 THEN
        LOOP
          FETCH KURSOR1 INTO TEMP2;
          EXIT WHEN KURSOR1%NOTFOUND;
          UPDATE PRODUKTY SET PRODUKTY.CENA = PRODUKTY.CENA - KWOTA
          WHERE CURRENT OF KURSOR1;
           IF(KWOTA>=TEMP2.cena) THEN RAISE_APPLICATION_ERROR(-20000, 'PRODUKT NIE MOZE TYLE KOSZTOWAC');
          END IF;
        END LOOP;
    END IF;
    IF (NR_OPCJI<1 or NR_OPCJI>2) THEN RAISE_APPLICATION_ERROR(-20000, 'WYBIERZ OPCJE Z ZAKRESU 1-2!'); 
    END IF;
    CLOSE KURSOR1;
END;



CREATE OR REPLACE PROCEDURE MODYFIKACJA_DANYCH_W_TABELI_DANE(NR_OPCJI NUMBER, id_p number, editp VARCHAR2) AS 
CURSOR KURSOR1 IS SELECT * FROM DANE
WHERE ID_DANE=id_p FOR UPDATE;
TEMP1 DANE%ROWTYPE;
zakres exception;
wiek exception;
id_e exception;

BEGIN

OPEN KURSOR1;

IF NR_OPCJI=1 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE DANE SET DANE.imie = editp
WHERE CURRENT OF KURSOR1;
END LOOP;
END IF;
IF NR_OPCJI=2 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE DANE SET DANE.nazwisko = editp
WHERE CURRENT OF KURSOR1;
END LOOP;
END IF;
IF NR_OPCJI=3 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE DANE SET DANE.wiek = editp
WHERE CURRENT OF KURSOR1;
if(editp<=0) then raise wiek;
end if;
END LOOP;
END IF;
IF NR_OPCJI=4 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE DANE SET DANE.numer_telefonu = editp
WHERE CURRENT OF KURSOR1;
END LOOP;
END IF;
IF NR_OPCJI=5 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE DANE SET DANE.email = editp
WHERE CURRENT OF KURSOR1;
END LOOP;
END IF;
IF NR_OPCJI=6 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE DANE SET DANE.haslo = editp
WHERE CURRENT OF KURSOR1;
END LOOP;
END IF;
IF NR_OPCJI=7 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE DANE SET DANE.login = editp
WHERE CURRENT OF KURSOR1;
END LOOP;
END IF;

IF (NR_OPCJI<1 or NR_OPCJI>7) THEN 
raise zakres; 
end if;
if(id_p<=0) then raise id_e;
end if;
exception
when zakres then dbms_output.put_line('WYBIERZ OPCJE Z ZAKRESU 1-7!');
RAISE_APPLICATION_ERROR(-20000, 'WYBIERZ OPCJE Z ZAKRESU 1-7!');
when wiek then dbms_output.put_line('TAKI WIEK NIE MOZE BYC');
RAISE_APPLICATION_ERROR(-20000, 'TAKI WIEK NIE MOZE BYC');
when id_e then dbms_output.put_line('ID NIEPOPRAWNE');
RAISE_APPLICATION_ERROR(-20000, 'ID NIEPOPRAWNE');
CLOSE KURSOR1;
END;






-----------------------PRACOWNICY
CREATE OR REPLACE PROCEDURE MODYFIKACJA_DANYCH_W_TABELI_PRACOWNICY(NR_OPCJI NUMBER, id_p number, editp VARCHAR2) AS 
CURSOR KURSOR1 IS SELECT * FROM PRACOWNICY
WHERE ID_PRACOWNICY=id_p FOR UPDATE;
TEMP1 PRACOWNICY%ROWTYPE;
zakres exception;
wynagrodzenie exception;
id_e exception;

BEGIN

OPEN KURSOR1;

IF NR_OPCJI=1 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE pracownicy SET pracownicy.wynagrodzenie = editp
WHERE CURRENT OF KURSOR1;
if(editp<=0) then raise wynagrodzenie;
end if;
END LOOP;
END IF;
IF NR_OPCJI=2 THEN
LOOP
FETCH KURSOR1 INTO TEMP1;
EXIT WHEN KURSOR1%NOTFOUND;
UPDATE PRACOWNICY SET PRACOWNICY.ZAWOD = editp
WHERE CURRENT OF KURSOR1;
END LOOP;
END IF;


IF (NR_OPCJI<1 or NR_OPCJI>7) THEN 
raise zakres; 
end if;
if(id_p<=0) then raise id_e;
end if;
exception
when zakres then dbms_output.put_line('WYBIERZ OPCJE Z ZAKRESU 1-7!');
RAISE_APPLICATION_ERROR(-20000, 'WYBIERZ OPCJE Z ZAKRESU 1-7!');
when wynagrodzenie then dbms_output.put_line('TAKIE WYNAGRODZENIE NIE MOZE BYC');
RAISE_APPLICATION_ERROR(-20000, 'TAKIE WYNAGRODZENIE NIE MOZE BYC');
when id_e then dbms_output.put_line('ID NIEPOPRAWNE');
RAISE_APPLICATION_ERROR(-20000, 'NIEPOPRAWNE ID');
CLOSE KURSOR1;
END;



SET ECHO OFF